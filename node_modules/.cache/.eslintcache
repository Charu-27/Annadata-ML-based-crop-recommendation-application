[{"C:\\Users\\Charu jain\\flask_backend\\user_cred\\src\\index.js":"1","C:\\Users\\Charu jain\\flask_backend\\user_cred\\src\\App.js":"2","C:\\Users\\Charu jain\\flask_backend\\user_cred\\src\\components\\login\\Login.jsx":"3","C:\\Users\\Charu jain\\flask_backend\\user_cred\\src\\components\\Login\\Login.jsx":"4","C:\\Users\\Charu jain\\flask_backend\\user_cred\\src\\components\\Register\\Register.jsx":"5","C:\\Users\\Charu jain\\flask_backend\\user_cred\\src\\components\\Home\\Home.jsx":"6"},{"size":275,"mtime":1667029821596,"results":"7","hashOfConfig":"8"},{"size":688,"mtime":1667029793314,"results":"9","hashOfConfig":"8"},{"size":184,"mtime":1664440598366,"results":"10","hashOfConfig":"11"},{"size":2266,"mtime":1667218640365,"results":"12","hashOfConfig":"8"},{"size":3630,"mtime":1667208385527,"results":"13","hashOfConfig":"8"},{"size":100,"mtime":1667029283079,"results":"14","hashOfConfig":"8"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vafj7d",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"9irk2r",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Charu jain\\flask_backend\\user_cred\\src\\index.js",[],[],"C:\\Users\\Charu jain\\flask_backend\\user_cred\\src\\App.js",[],[],"C:\\Users\\Charu jain\\flask_backend\\user_cred\\src\\components\\login\\Login.jsx",["35","36"],[],"C:\\Users\\Charu jain\\flask_backend\\user_cred\\src\\components\\Login\\Login.jsx",[],[],"C:\\Users\\Charu jain\\flask_backend\\user_cred\\src\\components\\Register\\Register.jsx",["37"],[],"import  React,{useState} from'react'\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nimport './register.css';\r\n\r\n\r\nconst Register=()=> {\r\n   \r\n  const [user,setUser]=useState({\r\n      name:\"\",\r\n      email:\"\",\r\n      phone:\"\",\r\n      password:\"\",\r\n      cpassword:\"\"\r\n  });\r\n  let name,value;\r\n  const handleInputs=(e)=>{\r\n      name=e.target.name;\r\n      value=e.target.value\r\n      setUser({...user,[name]:value});\r\n  }\r\n  const PostData=async (e)=>{\r\n    e.preventDefault()\r\n    const {name,email,phone,password,cpassword}=user;\r\n    const res=await fetch(\"/Register\",{\r\n        method:\"POST\",\r\n        headers:{\r\n            \"Content-Type\":\"application/json\"\r\n        },\r\n        body:JSON.stringify({\r\n            name,email,phone,password,cpassword\r\n        })\r\n    });\r\n    const data=await res.json();\r\n    if(data.status===422||!data){\r\n        window.alert(\"Invalid registration\");\r\n        console.log(\"Invalid registration\")\r\n    }\r\n    else{\r\n        console.log(res.status)\r\n        window.alert(\"Successful registration\");\r\n        console.log(\"Successful registration\");\r\n        window.location.href=\"/Login\"\r\n        \r\n        \r\n    }\r\n}\r\n \r\n  return (\r\n  <><section className=\"Signup\">\r\n    \r\n    <div>\r\n    <h1 className=\"heading2\">REGISTER YOURSELF TO ANNANDATA </h1>\r\n    <div className='backgroundimg2'>\r\n      <figure>\r\n        <img></img>\r\n      </figure>\r\n      </div>\r\n      </div> \r\n      <div className=\"Registration-form\">\r\n\r\n      <div className=\"form-items\">\r\n      <h2 text-align=\"center\">Register</h2>\r\n      <form method=\"POST\" >\r\n      <Form.Group className=\"Name\" controlId=\"formBasicName\">\r\n        <Form.Label>Name</Form.Label>\r\n        <Form.Control type=\"name\" name=\"name\" placeholder=\"Enter your name\" value={user.name}onChange={handleInputs} \r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group className=\"Email\" controlId=\"formBasicEmail\">\r\n        <Form.Label>Email address</Form.Label>\r\n        <Form.Control  type=\"email\" name=\"email\" placeholder=\"Enter email\" value={user.email}\r\n        onChange={handleInputs} \r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group className=\"Phone\" controlId=\"formBasicPhone\">\r\n        <Form.Label>Contact</Form.Label>\r\n        <Form.Control type=\"number\" name=\"phone\" placeholder=\"Enter your phone number\" value={user.phone}\r\n        onChange={handleInputs} \r\n        />\r\n        <Form.Text className=\"text-muted\">\r\n          your contact number should be 10 digits long.\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <Form.Group className=\"Password\" controlId=\"formBasicpassword\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control  type=\"password\" name=\"password\" placeholder=\"Enter your password\" value={user.password}\r\n        onChange={handleInputs} \r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group className=\"Cpassword\" controlId=\"formBasicCpassword\">\r\n        <Form.Label>Confirm password </Form.Label>\r\n        <Form.Control  type=\"password\" name=\"cpassword\" placeholder=\"Re-enter your password\" value={user.cpassword}\r\n        onChange={handleInputs} \r\n        />\r\n        <Form.Text className=\"text-muted\">\r\n          confirm password should match with your set password.\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n\r\n      <Button variant=\"primary\" type=\"submit\" className=\"button\" onClick={PostData} >\r\n        Submit\r\n      </Button>\r\n    \r\n      <p className=\"link2\"> <a href=\"/Login\">\r\n            If already Registered,Back to Login!</a></p>\r\n      </form>\r\n      \r\n      </div>\r\n      </div>\r\n    </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Register;",[],"C:\\Users\\Charu jain\\flask_backend\\user_cred\\src\\components\\Home\\Home.jsx",[],[],{"ruleId":"38","severity":1,"message":"39","line":1,"column":8,"nodeType":"40","messageId":"41","endLine":1,"endColumn":13},{"ruleId":"38","severity":1,"message":"42","line":2,"column":8,"nodeType":"40","messageId":"41","endLine":2,"endColumn":14},{"ruleId":"43","severity":1,"message":"44","line":58,"column":9,"nodeType":"45","endLine":58,"endColumn":14},"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'render' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]